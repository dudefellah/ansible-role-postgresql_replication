---
- name: Dest data dir on the replica node(s) to see if it's empty
  ansible.builtin.find:
    path: "{{ _postgresql_replication_data_dir }}"
  register: data_dir_find
  when:
    - "not postgresql_replication_primary|bool"

# - name: Get replication on the master
#   community.general.postgresql_query:
#     db: "{{ postgresql_replication_database }}"
#     query: "SELECT * FROM pg_stat_replication WHERE client_addr"

- name: Exit with an error if a primary hasn't been specified for streaming
  fail:
    msg: "No replication primary specified"
  when:
    - "postgresql_replication_primary_address is none"

- block:
    - name: Create a tmpfile for holding a pgpass file
      tempfile:
        state: file
      changed_when: false
      register: tmpfile

    - name: Ensure limited permissions on the tmpfile
      file:
        path: "{{ tmpfile.path }}"
        owner: "{{ postgresql_replication_postgresql_user }}"
        mode: "0600"
      changed_when: false

    - name: Write pgpass file
      copy:
        content: |-
          {{ postgresql_replication_primary_address }}:\
          {{ postgresql_replication_primary_port | default('5432') }}:\
          *:\
          {{ postgresql_replication_replication_user }}:\
          {{ postgresql_replication_replication_password }}
        dest: "{{ tmpfile.path }}"
        mode: "0600"
      changed_when: false

    - name: Do initial basebackup
      command: >-
        pg_basebackup -X stream -D {{ _postgresql_replication_data_dir }}
          -h {{ postgresql_replication_primary_address }}
          -U {{ postgresql_replication_replication_user }}
      become: true
      become_user: "{{ postgresql_replication_postgresql_user }}"
      when:
        - "data_dir_find.files|length == 0"
  always:
    - name: Remove tmp pgpass file
      file:
        path: "{{ tmpfile.path }}"
        state: absent
      changed_when: false

- name: Set recovery.conf
  template:
    src: recovery.conf.j2
    dest: "{{ postgresql_replication_data_dir }}/recovery.conf"
    owner: "{{ postgresql_replication_postgresql_user }}"
    mode: "0644"
  notify: reload postgres
  when:
    - "postgresql_replication_recovery_conf_enabled|bool"

- name: Remove recovery.conf
  file:
    path: "{{ postgresql_replication_data_dir }}/recovery.conf"
    state: absent
  notify: reload postgres
  when:
    - "not postgresql_replication_recovery_conf_enabled|bool"

- name: Set standby.signal file
  file:
    path: "{{ postgresql_replication_data_dir }}/standby.signal"
    owner: "{{ postgresql_replication_postgresql_user }}"
    mode: "0640"
    state: touch
    access_time: preserve
    modification_time: preserve
  when:
    - "not postgresql_replication_recovery_conf_enabled|bool"

- name: Set wal_level on replica
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: wal_level
    _pg_conf_value: "{{ postgresql_replication_wal_level }}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"

- name: Set max_wal_senders on replica
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: max_wal_senders
    _pg_conf_value: "{{ postgresql_replication_max_wal_senders }}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"

- name: Set wal_keep_segments on replica
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: wal_keep_segments
    _pg_conf_value: "{{ postgresql_replication_wal_keep_segments }}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"

- name: Set wal_keep_size on replica
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: wal_keep_size
    _pg_conf_value: "{{ postgresql_replication_wal_keep_size }}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"

- name: Set synchronous_standby_names on replica
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: synchronous_standby_names
    _pg_conf_value: "{{ postgresql_replication_synchronous_standby_names }}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"

- name: Set synchronous_commit on replica
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: synchronous_commit
    _pg_conf_value: "{{ postgresql_replication_synchronous_commit }}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"

- name: Set hot standby
  include_tasks: update_conf_var.yml
  vars:
    _pg_conf_file: "{{ _postgresql_replication_postgresql_conf_filename }}"
    _pg_conf_name: hot_standby
    _pg_conf_value: "{% if postgresql_replication_hot_standby|bool %}yes{% else %}no{% endif %}"
  when:
    - "not postgresql_replication_primary|bool"
    - "postgresql_replication_postgresql_conf_configure|bool"
